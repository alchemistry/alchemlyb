# -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8 -*-
====================
 alchemlyb CHANGELOG
=====================

The rules for this file:
  * entries are sorted newest-first.
  * summarize sets of changes - don't reproduce every git log comment here.
  * don't ever delete anything.
  * keep the format consistent (79 char width, M/D/Y date format) and do not
    use tabs but use spaces for formatting
  * accompany each entry with github issue/PR number (Issue #xyz)
  * release numbers follow "Semantic Versioning" https://semver.org

------------------------------------------------------------------------------
??/??/2022 orbeckst, xiki-tempula

  * 1.0.0

Changes
  - Drop support for py3.7 (Issue #179, PR #214)
  - forward_backward_convergence will use AutoMBAR as backend when `MBAR` is
    selected as the estimator (PR #114).
  - AutoMBAR accepts the `method` argument (PR #114).
  - Refactor the subsampling module to unify the behaviour of
    equilibrium_detection and statistical_inefficiency (PR #218).
  - Remove the ignore_warnings flag in ABFE workflow. (PR #231)


Enhancements
  - Add u_nk2series and dhdl2series to convert u_nk and dHdl to series (PR
    #218).
  - Add remove_burnin keyword to decorrelate_u_nk and decorrelate_dhdl (PR #218).
  - Add a base class for workflows (PR #188).
  - Add the ABFE workflow (PR #114).


Fixes
  - documented conda installation (available since 0.6.0) (#192)
  - AMBER parsers now use 'ntpr' information to read time properly (issue #221, PR #224)
  - AMBER parsers now skip the reading of averages (issue #226, PR #230)
  - AMBER parsers now check if the T provided by the user is the same
    at which the simulations were run (issue #225, PR #232)
  - changed how int/float are read from AMBER files (issue #229, PR #235)
  - substitute the any_none() function with a check "if None in" in the AMBER parser (issue #236, PR #237)
  - For ABFE workflow, dHdl will only be read when a TI estimator is chosen.
    Similarly, u_nk will only be read when FEP estimators are chosen. (PR #231)
  - All parsers now have a 'extract(file, T)' method that returns a dict with both
    "dHdl" and "u_nk" data (or None). THe AMBER parser when using this function will read the 
    file just once, extracting all data at once. (issue #222, PR #240)
  - Fix dhdl2series and u_nk2series would not reattach the unit. (PR #248)
  - Removed the 'dhdl' keyword for uncorrelating the u_nk (see `u_nk2series()`). Use 'dE'
    as an alternative or use 'all' (instead of the deprecated 'dhdl_all')  (PR #250).


07/22/2022 xiki-tempula, IAlibay, dotsdl, orbeckst, ptmerz

  * 0.7.0

Changes
  - Deployment to PyPI is now done automatically using github actions
    (Issue #193)
  - gmx parser now defaults to dropping NaN and corrupted lines (filter=True) 
    (#171, PR #183)
  - remove broken .zip support from util.anyopen() (PR #197)

Enhancements
  - Add filter function to gmx.extract to make it more robust (PR #183): can filter 
    incomplete/corrupted lines (#126, #171) with filter=True.
  - Add support to util.anyopen() for taking filelike objects (PR #197)

Fixes
  - Fixes setup.py and setup.cfg to prevent installations with Python versions
    lower than 3.7 (Issue #193)
  - added AutoMBAR to convergence analysis (#189)
  - Fixed subsampling in statistical_inefficiency when lower or step keywords
    are used (Issue #198, PR #199)


12/28/2021 schlaicha, xiki-tempula, jhenin, ttjoseph, orbeckst

  * 0.6.0

Enhancements
  - support Python 3.10
  - support for Interleaved Double-Wide Sampling (IDWS) in NAMD (PR #135).
    Windows may be split across NAMD .fepout files, allowing for interrupted
    and restarted simulations, but each window must be complete (issue #145).
    Various malformations of input files are detected, where lambdas do not
    monotonically increase or decrease, or are inconsistent or missing.
  - Convenience function for decorrelating u_nk and dHdl (PR #163).
  - Time convergence function forward_backward_convergence
    introduced and plot_convergence now takes dataframe from
    forward_backward_convergence as input (PR #168).
  - Automatic MBAR solver with fall back (issue #170, PR #172)

Fixes
  - Subsampling now works with bounds and step (PR #167, issue #166).
  - AMBER parser logger now always logs to alchemlyb.parsers.Amber
    instead of the root logger (PR #173)
  - updated deprecated pandas aggregation, now using groupby(level).agg (#175)


09/17/2021 xiki-tempula, orbeckst

  * 0.5.1

Changes (not affecting code)
  - update the Mission to also include general and robust workflows (discussion
    #159, issue #160, PR #161)

Fixes
  - MBAR estimator now correctly passes max_iterations to pymbar.MBAR. (PR #162)
  - docs (PR #157)
  - visualisation.df_state.plot_dF_state() now correctly raises ValueError instead
    of NameError when incorrect orientation keyword argument is supplied


08/01/2021 xiki-tempula, orbeckst

  * 0.5.0

Changes
  - alchemlyb adopts NEP29
    https://numpy.org/neps/nep-0029-deprecation_policy.html
    to effectively only support the last 2-3 minor Python versions
  - Removed support for Python 2.7 and 3.6 (issue #130, #140):
    supported/tested Python versions are 3.7, 3.8, 3.9 on
    Linux, macOS, and Windows
  - The scipy constant for gas constant is used for parsers instead of the
    constants used by the corresponding MD engine (issue #125, PR #129).
    This leads to small changes in results from GROMACS simulations in kT
    compared to the previous releases, with a relative difference on the order
    of 1e-7.
  - Added unit-awareness: the base unit remains kT but dataframes need to
    carry the unit and temperature in a DataFrame.attrs so that dataframes
    can be easily converted to different energy units (issue #125)
  - The parser outputs dataframe with metadata (issue #125, PR #129).
  - Visualisation module will change the data according to input unit
    (issue #125, PR #129).
  - Bump the minimum pandas version to 1.2 (issue #130, #140).

Enhancements
  - postprocessors.units module for unit conversion (issue #125, PR #129).
  - pass_attrs decorator for safely passing variable (issue #125, PR #129).
  - alchemlyb.concat added to replace pd.concat (issue #125, PR #129).

Fixes
  - `alchemlyb.concat()` should raise ValueError when given empty list, to be
    compatible with pandas.concat() (issue #150, PR #152).
  - Fix the support for pandas >= 1.3 by skipping 1.3.0 (issue #147, PR #148).
  - Fix separate_dhdl not work for multiple columns (issue #149, PR #151).


06/08/2021 orbeckst

  * 0.4.2

Fixes
  - added back documentation that was lost in 0.4.1 release (#136)


06/01/2021 xiki-tempula, orbeckst

  * 0.4.1

Enhancements

Deprecations
  - Last release that supports Python 3.5 and 2.7.

Fixes
  - The plotting function assumes that the default unit is kcal/mol where it is
    kT (issue #124, PR #123).
  - invalid escape sequence in plotting annotations (issue #133)

Changes


04/27/2021 wehs7661, dotsdl, xiki-tempula, orbeckst

  * 0.4.0

Enhancements
  - Allow the dhdl from TI estimator to be separated for multiple lambda
    (PR #121).
  - Allow the convergence to be plotted. (PR #121)
  - Allow automatic sorting and duplication removal during subsampling
    (issue #118, PR #119).
  - Allow statistical_inefficiency to work on multiindex series. (issue #116,
    PR #117)
  - Allow the overlap matrix of the MBAR estimator to be plotted. (issue #73,
    PR #107)
  - Allow the dhdl of the TI estimator to be plotted. (issue #73, PR #110)
  - Allow the dF states to be plotted. (issue #73, PR #112)

Deprecations
  - Last version that is tested against Python 3.5 and 2.7.

Fixes
  - removed redundant statistical inefficiency calculation in
    `alchemlyb.preprocessing.subsampling.equilibrium_detection`

Changes


01/16/2020 dotsdl, orbeckst

  * 0.3.1

Enhancements

Deprecations

Fixes
  - added explicit `return_theta=True` for call to pymbar.MBAR.getFreeEnergyDifferences,
    as this was happening prior to changes in `pymbar` without the explicit call

Changes


08/05/2019 dotsdl, orbeckst, shuail, trje3733, brycestx, harlor, vtlim, lee212

  * 0.3.0

Enhancements
  - Amber TI parser (#10)
  - Amber FEP (MBAR) parser (#42)
  - Gromacs extended ensemble parser (#14)
  - NAMD FEP parser (#7, #75)
  - BAR estimator (#40)
  - enhanced performance of Gromacs parsers with pandas.read_csv() (#81)
  - GOMC TI and FEP parser (#77)

Deprecations

Fixes
  - fixed TI estimator (PR #61)
  - correctly use pV and U in the Gromacs parser (#59)

Changes
  - defaults for statistical_inefficiency() are more conservative (#39)
  - API Proposal was upgraded to API Principles (and updated)

(Note: release number 0.2.x was skipped.)


05/27/2017 dotsdl, ianmkenney, orbeckst

  * 0.1.0

First release

Features:

    - Parsers for GROMACS, including reduced potentials and gradients.
    - Subsampler functions for slicing, statitistical inefficiency, equilibration detection.
    - Minimally functional estimators for MBAR, TI.
    - high test coverage (works with data in alchemistry/alchemtests)
